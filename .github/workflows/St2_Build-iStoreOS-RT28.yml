name: 💿 St2_Build-iStoreOS-RT28

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      openwrt_board:
        description: "请选择设备型号"
        required: true
        default: "h96-max-m2"
        type: choice
        options:
          - h96-max-m2
      openwrt_kernel:
        description: "请选择内核版本（若未匹配则自动）"
        required: true
        default: "6.6.y"
        type: choice
        options:
          - 5.10.y
          - 5.15.y
          - 6.1.y
          - 6.6.y
          - 6.12.y
      openwrt_rootfs:
        description: "请选择Rootfs通用底包（确保step1有生成）"
        required: true
        default: "RELEASE"
        type: choice
        options:
          - RELEASE
      network_settings:
        description: "请选择初始网络配置（确保step1有生成）"
        required: true
        default: "dhcp"
        type: choice
        options:
          - static
          - dhcp

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: ⏬ 下载 rootfs.tar.gz
        run: |
          echo "📦 正在下载预构建 rootfs"
          mkdir -p bin/targets/rockchip/armv8
          curl -L -o bin/targets/rockchip/armv8/openwrt-rockchip-armv8-generic-rootfs.tar.gz \
            https://github.com/${{ github.actor }}/iStoreOS-Actions/releases/download/iStoreOS-24.10-${{ inputs.openwrt_rootfs }}-${{ inputs.network_settings }}/istoreos-rockchip-armv8-generic-rootfs.tar.gz

      - name: 🔍 查找rootfs.tar.gz所在路径
        id: find_rootfs
        run: |
          ROOTFS_FILE=$(find bin/targets/rockchip/armv8/ -type f -name "*rootfs.tar.gz" | head -n1)
          echo "✅ Found: $ROOTFS_FILE"
          if [ ! -f "$ROOTFS_FILE" ]; then
            echo "❌ 找不到 rootfs.tar.gz 文件"
            exit 1
          fi
          echo "file=$ROOTFS_FILE" >> $GITHUB_OUTPUT

      - name: ⚙️ 配置RT28网络和LED设置
        run: |
          echo "配置RT28专用网络和LED设置..."
          # 创建临时目录来修改rootfs
          mkdir -p temp_rootfs
          tar -xzf ${{ steps.find_rootfs.outputs.file }} -C temp_rootfs/
          
          # 配置网络设置
          cat > temp_rootfs/etc/board.d/02_network << 'EOF'
          . /lib/functions.sh
          . /lib/functions/system.sh

          board_config_update

          case "$(board_name)" in
              h96-max-m2)
                  # RT28专用网络配置
                  wan_mac=$(macaddr_generate_from_mmc_cid mmcblk0)
                  lan_mac=$(macaddr_add "$wan_mac" +1)
                  ucidef_set_interfaces_lan_wan "eth0.1" "eth0.2"
                  ucidef_add_switch "switch0" \
                      "0:lan" "1:lan" "2:lan" "3:wan" "7@eth0"
                  ;;
          esac

          board_config_flush
          EOF

          # 配置LED设置
          cat > temp_rootfs/etc/board.d/01_leds << 'EOF'
          . /lib/functions.sh

          set_led_config() {
              case "$(board_name)" in
                  h96-max-m2)
                      # RT28专用LED配置
                      ucidef_set_led_netdev "wlan2g" "WiFi 2.4GHz" "link_blue" "radio0"
                      ucidef_set_led_netdev "wlan5g" "WiFi 5GHz" "link_green" "radio1"
                      ;;
              esac
          }

          boot_hook_add preinit_main set_led_config
          EOF

          # 设置执行权限
          chmod +x temp_rootfs/etc/board.d/02_network
          chmod +x temp_rootfs/etc/board.d/01_leds
          
          # 重新打包rootfs
          cd temp_rootfs
          tar -czf ../modified_rootfs.tar.gz .
          cd ..
          mv modified_rootfs.tar.gz ${{ steps.find_rootfs.outputs.file }}

      - name: 🧱 打包iStoreOS固件
        uses: sy3tem/amlogic-s9xxx-openwrt@main
        with:
          openwrt_path: ${{ steps.find_rootfs.outputs.file }}
          openwrt_board: ${{ inputs.openwrt_board }}
          openwrt_kernel: ${{ inputs.openwrt_kernel }}
          auto_kernel: true
          kernel_repo: ophub/kernel
          kernel_usage: stable
          builder_name: kwonelee

      - name: 📜 调整.img.gz 文件名
        id: rename
        run: |
          for FILE in ${{ env.PACKAGED_OUTPUTPATH }}/*.img.gz; do
            echo "Processing file: $FILE"
            FILENAME=$(basename "$FILE")
            NEW_FILENAME=$(echo "$FILENAME" | sed 's/openwrt/istoreos_24.10.2/g' | sed 's/h96-max-m2/rt28-test/g')
            if [ "$FILENAME" != "$NEW_FILENAME" ]; then
              mv "$FILE" "${{ env.PACKAGED_OUTPUTPATH }}/$NEW_FILENAME"
              echo "Renamed $FILENAME to $NEW_FILENAME"
            else
              echo "No need to rename $FILENAME"
            fi
          done

      - name: 🚀 上传到 Release
        uses: softprops/action-gh-release@v2.2.1
        with:
          tag_name: iStoreOS-24.10-RT28-TEST-${{ inputs.openwrt_rootfs }}-${{ inputs.network_settings }}
          body: |
            📌 版本： iStoreOS-24.10.2-RELEASE (测试版)
            📟 基础设备： h96-max-m2 (适配RT28网络/LED)
            🏷️ 平台： Rockchip
            🧠 内核： ${{ inputs.openwrt_kernel }}
            
            🌐 RT28网络配置：
              - LAN: eth0.1
              - WAN: eth0.2  
              - 交换机: 0:lan,1:lan,2:lan,3:wan,7@eth0
            
            💡 RT28 LED配置：
              - WiFi 2.4GHz: link_blue (radio0)
              - WiFi 5GHz: link_green (radio1)
            
            ⚠️ 注意：此为测试版本，基于h96-max-m2设备适配RT28的网络和LED配置
            
            👤 用户名： root
            🔒 密码： 无
            🌐 IP： ${{ inputs.network_settings == 'static' && '静态配置' || '动态获取（DHCP）' }}
          files: |
            ${{ env.PACKAGED_OUTPUTPATH }}/*.img.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
